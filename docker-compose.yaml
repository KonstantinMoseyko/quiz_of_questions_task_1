version: "3"

services:
  app:
    restart: always
    depends_on:
      db:
        condition: service_healthy
    build:
      dockerfile: ./Dockerfile
      context: .
    env_file: 
      - .env
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}  
    ports:
      - 5000:5000
    networks:
      - backnet
    
    
  db:
    restart: always
    image: postgres:14
    env_file: 
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${PGDATA}
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5  
    networks:
      - backnet

volumes:
  pgdata:

networks:
  backnet: